{"name":"Data Hacking","tagline":"Examples of using iPython, Pandas, and Scikit Learn to get the most out of your security data.","body":"### Welcome to the Click Security Data Hacking Project\r\n\"Hacking in the sense of deconstructing an idea, hardware, anything and getting it to do something it wasnâ€™t intended or to better understand how something works.\" \r\n\r\nSo we want to quickly deconstruct data, understand what we've got and how to best utilize it for the problem at hand. \r\n\r\nThe primary motivation for these exercises is to explore the nexus of iPython, Pandas and Scikit Learn on security data of various kinds. The exercises will often intentionally shows common missteps, warts in the data, paths that didn't work out that well and results that could definitely be improved upon. In general we're trying to capture what worked and what didn't. Not only is that more realistic but often much more informative to the reader. :)\r\n\r\n#### Python Modules Used:\r\n\r\n- iPython: Architecture for interactive computing and presentation (http://ipython.org)\r\n- Pandas: Python Data Analysis Library (http://pandas.pydata.org)\r\n- Scikit Learn (http://scikit-learn.org) Scikit-learn: Machine Learning in Python, Pedregosa et al., JMLR 12, pp. 2825-2830, 2011.\r\n- Matplotlib: Python 2D plotting library (http://matplotlib.org)\r\n\r\n### Exercises:\r\n- Detecting Algorithmically Generated Domains \r\n    - [GitHub Project](https://github.com/ClickSecurity/data_hacking/tree/master/dga_detection)\r\n    - [Notebook Viewer](http://nbviewer.ipython.org/url/raw.github.com/ClickSecurity/data_hacking/master/dga_detection/DGA_Domain_Detection.ipynb)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}